{"version":3,"sources":["webpack:///src/pages/osd/edit.vue","webpack:///./src/pages/osd/edit.vue?2103","webpack:///./src/pages/osd/edit.vue","webpack:///./node_modules/exif-js/exif.js"],"names":["edit","data","indicator","progress","showIndicatoe","time","size","speed","activeTab","selectedBackground","bgColors","file","src","img","fixedRatio","realRatio","orient","canvas","cw","ch","c","ctx","w","h","canvasCutFrame","canvasCut","canvasCutResult","cut","dw","dh","mw","mh","x","y","ow","oh","ox","oy","area","windowWidth","zepto_default","window","width","windowHeight","height","created","_this","this","getUploadImg","type","loadFile","init","parseInt","$nextTick","loadImg","mounted","$refs","getContext","computed","extends_default","Object","vuex_esm","headerHeight","lib","flexible","rem","bottomHeight","aspectRatio","getIsHScreen","styleCanvasWrapper","styleCenter","left","top","styleLT","styleRT","styleRB","styleLB","styleT","styleR","styleB","styleL","isBase64","test","watch","val","_this2","setTimeout","oldVal","indicator.progress","_this3","toast_default","$t","$router","go","methods","openPics","imgupload","createEventBroadcast","_this4","_len","arguments","length","options","Array","_key","openIndicator","reader","FileReader","readAsDataURL","onload","e","closeIndicator","target","result","setUploadImg","name","onerror","_this5","_ref","undefined","_ref$init","_ref$restore","restore","loadedImg","Image","complete","getProgress","handleLoadImg","getPhotoOrientation","initCanvas","cancelCut","drawImage","Math","round","clearRect","openCut","max","save","rotate","PI","translate","initCut","drawCut","fillStyle","fillRect","strokeStyle","lineWidth","beginPath","moveTo","lineTo","closePath","stroke","moveCenter","eventName","hammer","panEnd","min","deltaX","deltaY","moveCorner","_ref2","right","bottom","moveLT","moveRT","moveRB","moveLB","moveT","moveR","moveB","moveL","drawImageCut","cb","_this6","crossOrigin","imgCut","_this7","imgData","getImageData","putImageData","toDataURL","toggleBgColor","changeBgColor","index","upload","_this8","http","post","apiurl","setOsdEditInfo","id","loading","then","res","status","utils","formData","FormData","append","uploadOSD","errorCode","_this9","control","progressCancel","_this10","active","text","indicator_default","a","open","close","exif_default","getData","getTag","osd_edit","render","_vm","_h","$createElement","_c","_self","staticClass","attrs","showcancel","showOsdFont","title","on","savesFont","cancel","$event","_v","directives","rawName","value","expression","ref","class","vx-container","horizontal","style","backgroundColor","_s","modifiers","pan","_e","_l","item","selected","click","resetpic-o","resetpic","cutpic-o","cutpic","picture-o","picture","background-o","background","staticRenderFns","Component","__webpack_require__","normalizeComponent","ssrContext","__webpack_exports__","__WEBPACK_AMD_DEFINE_RESULT__","debug","EXIF","obj","EXIFwrapped","module","exports","ExifTags","Tags","36864","40960","40961","40962","40963","37121","37122","37500","37510","40964","36867","36868","37520","37521","37522","33434","33437","34850","34852","34855","34856","37377","37378","37379","37380","37381","37382","37383","37384","37385","37396","37386","41483","41484","41486","41487","41488","41492","41493","41495","41728","41729","41730","41985","41986","41987","41988","41989","41990","41991","41992","41993","41994","41995","41996","40965","42016","TiffTags","256","257","34665","34853","258","259","262","274","277","284","530","531","282","283","296","273","278","279","513","514","301","318","319","529","532","306","270","271","272","305","315","33432","GPSTags","0","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","IFD1Tags","StringValues","ExposureProgram","MeteringMode","255","LightSource","Flash","31","32","65","69","71","73","77","79","89","93","95","SensingMethod","SceneCaptureType","SceneType","CustomRendered","WhiteBalance","GainControl","Contrast","Saturation","Sharpness","SubjectDistanceRange","FileSource","Components","imageHasData","callback","handleBinaryFile","binFile","findEXIFinJPEG","exifdata","iptcdata","dataView","DataView","console","log","byteLength","getUint8","offset","isFieldSegmentStart","nameHeaderLength","startOffset","sectionLength","getUint16","readIPTCData","findIPTCinJPEG","isXmpEnabled","xmpdata","self","dom","DOMParser","getStringFromDB","xmpString","xmpEndIndex","indexOf","indexOfXmp","substring","slice","domDocument","parseFromString","xml2Object","findXMPinJPEG","call","base64","contentType","match","replace","binary","atob","len","buffer","ArrayBuffer","view","Uint8Array","i","charCodeAt","base64ToArrayBuffer","fileReader","url","XMLHttpRequest","responseType","response","send","objectURLToBlob","blob","readAsArrayBuffer","Blob","File","marker","readEXIFData","IptcFieldMap","120","110","55","80","85","122","105","116","fieldValue","fieldName","dataSize","segmentType","segmentStartPos","getInt16","hasOwnProperty","push","readTags","tiffStart","dirStart","strings","bigEnd","entryOffset","tag","entries","tags","readTagValue","vals","n","numerator","denominator","numValues","getUint32","valueOffset","Number","getInt32","start","outstr","String","fromCharCode","exifData","gpsData","tiffOffset","firstIFDOffset","ExifIFDPointer","GPSInfoIFDPointer","IFD1OffsetPointer","getNextIFDOffset","thumbTags","JpegIFOffset","JpegIFByteCount","tOffset","tLength","readThumbnailImage","xml2json","xml","json","nodeType","attributes","j","attribute","nodeName","nodeValue","hasChildNodes","childNodes","child","old","children","idx","itemAtt","dataKey","dataValue","textContent","message","enableXmp","disableXmp","HTMLImageElement","getIptcTag","getAllTags","getAllIptcTags","pretty","strPretty","readFromBinaryFile","apply"],"mappings":"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","file":"static/js/13.b40713efe1807b76ba04.js","sourcesContent":["<template>\r\n  <div class=\"edit-osd\">\r\n    <vx-header :showcancel=\"activeTab !== 2\" :showOsdFont=\"activeTab !== 2\" @savesFont=\"upload\" :title=\"activeTab === 2 ? $t('osd.crop') : 'OSD'\" @cancel=\"$router.go(-1)\"></vx-header>\r\n    <img ref=\"loadedImg\" src=\"\" crossOrigin=\"*\" v-show=\"0\" />\r\n    <div class=\"osd-warp\" :class=\"{'vx-container':!getIsHScreen}\">\r\n      <div class=\"edit-warp\" :class=\"{horizontal: getIsHScreen}\" :style=\"{width: styleCanvasWrapper.w + 'px', height: styleCanvasWrapper.h + 'px', backgroundColor: bgColors[selectedBackground] || '#212124'}\">\r\n        <span class=\"cut-size\" v-show=\"activeTab == 2\">{{Math.round(cut.w * file.realRatio)}}*{{Math.round(cut.h * file.realRatio)}}</span>\r\n        <canvas ref=\"canvas\" class=\"canvas\" :style=\"{width: canvas.w + 'px', height: canvas.h + 'px', left: canvas.x + 'px', top: canvas.y + 'px'}\"></canvas>\r\n        <canvas v-show=\"activeTab == 2\" ref=\"canvas-cut-frame\" class=\"canvas\" :index=\"0\" :style=\"{width: canvas.w + 'px', height: canvas.h + 'px', left: canvas.x + 'px', top: canvas.y + 'px'}\"></canvas>\r\n        <canvas v-show=\"0\" ref=\"canvas-cut\" class=\"canvas\"></canvas>\r\n        <canvas v-show=\"0\" ref=\"canvas-cut-result\" class=\"canvas\"></canvas>\r\n        <template v-if=\"activeTab == 2\">\r\n          <div class=\"corner\" v-touch.pan=\"moveCenter\" :index=\"0\" :style=\"styleCenter\"></div>\r\n          <div class=\"corner corner-left-top\" v-touch.pan=\"moveLT\" :index=\"0\" :style=\"styleLT\"></div>\r\n          <div class=\"corner corner-right-top\" v-touch.pan=\"moveRT\" :index=\"0\" :style=\"styleRT\"></div>\r\n          <div class=\"corner corner-right-bottom\" v-touch.pan=\"moveRB\" :index=\"0\" :style=\"styleRB\"></div>\r\n          <div class=\"corner corner-left-bottom\" v-touch.pan=\"moveLB\" :index=\"0\" :style=\"styleLB\"></div>\r\n          <div class=\"corner\" v-touch.pan=\"moveT\" :index=\"0\" :style=\"styleT\"></div>\r\n          <div class=\"corner\" v-touch.pan=\"moveR\" :index=\"0\" :style=\"styleR\"></div>\r\n          <div class=\"corner\" v-touch.pan=\"moveB\" :index=\"0\" :style=\"styleB\"></div>\r\n          <div class=\"corner\" v-touch.pan=\"moveL\" :index=\"0\" :style=\"styleL\"></div>\r\n        </template>\r\n      </div>\r\n      <div class=\"operator-tabs\" v-if=\"activeTab == 4\">\r\n        <div class=\"backgroundtab\">\r\n          <div v-for=\"(item, index) in bgColors\" class=\"bgitem\" :style=\"{backgroundColor: item}\" :class=\"{'selected':selectedBackground == index}\" @click=\"changeBgColor(index)\"></div>\r\n        </div>\r\n      </div>\r\n      <div class=\"cuttab\" v-if=\"activeTab == 2\">\r\n        <div class=\"del btn\" @click=\"cancelCut\">{{$t('common.cancel')}}</div>\r\n        <div class=\"ok btn\" @click=\"imgCut\">{{$t('common.complete')}}</div>\r\n      </div>\r\n      <div class=\"operators\">\r\n        <div class=\"operators-item btn\" @click=\"restore\">\r\n          <div class=\"operators-item-icon\" :class=\"{'resetpic-o':activeTab==1,'resetpic':activeTab!=1}\"></div>\r\n        </div>\r\n        <div class=\"operators-item btn\" @click=\"openCut\">\r\n          <div class=\"operators-item-icon cutpic\" :class=\"{'cutpic-o':activeTab==2,'cutpic':activeTab!=2}\"></div>\r\n        </div>\r\n        <div class=\"operators-item btn\" @click=\"openPics\">\r\n          <div class=\"operators-item-icon picture\" :class=\"{'picture-o':activeTab==3,'picture':activeTab!=3}\"></div>\r\n        </div>\r\n        <div class=\"operators-item btn\" @click=\"toggleBgColor\">\r\n          <div class=\"operators-item-icon background\" :class=\"{'background-o':activeTab==4,'background':activeTab!=4}\"></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <vx-imgupload ref=\"imgupload\"></vx-imgupload>\r\n    <vx-indicator v-if=\"indicator.showIndicatoe\" :text=\"indicator.progress\" @progressCancel=\"progressCancel\" :time=\"indicator.time\"></vx-indicator>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n  import { mapGetters, mapMutations } from 'vuex';\r\n  import { dataURLtoFile, getBase64Image, Confirm } from '../../utils';\r\n  import { Toast, Indicator } from 'mint-ui';\r\n  import htp from \"../../api/http\";\r\n  import urls from '../../api/apiurl';\r\n  import $ from 'zepto';\r\n  import EXIF from 'exif-js';\r\n\r\n  export default {\r\n    data() {\r\n      return {\r\n        indicator: {\r\n          progress: 0, //进度条\r\n          showIndicatoe: false,\r\n          time: 0,\r\n          size: 0,\r\n          speed: 2100 //每秒下载字节 (2371上传)\r\n        },\r\n        activeTab: null, //选中的tab\r\n        selectedBackground: -1, //选中的背景色\r\n        bgColors: ['#fff', '#65e0d9', '#aa71d2', '#000'], //背景色列表\r\n        file: {\r\n          src: '', //base64\r\n          img: null, //生成的图片dom\r\n          fixedRatio: 2, //压缩后的图和canvas的比例\r\n          realRatio: 1, //原图与canvas的比例\r\n          orient: null //图片原始方向\r\n        },\r\n        canvas: { //渲染图片\r\n          cw: 0, //canvas真实宽度\r\n          ch: 0, //canvas真实高度\r\n          c: null, //Canvas\r\n          ctx: null, //Context\r\n          w: 0, //canvas样式宽度\r\n          h: 0 //canvas样式高度\r\n        },\r\n        canvasCutFrame: { //画裁剪框\r\n          cw: 0, //canvas真实宽度\r\n          ch: 0, //canvas真实高度\r\n          c: null, //Canvas\r\n          ctx: null, //Context\r\n          w: 0, //canvas样式宽度\r\n          h: 0 //canvas样式高度\r\n        },\r\n        canvasCut: { //隐藏 渲染原图\r\n          cw: 0, //canvas真实宽度\r\n          ch: 0, //canvas真实高度\r\n          c: null, //Canvas\r\n          ctx: null, //Context\r\n          w: 0, //canvas样式宽度\r\n          h: 0 //canvas样式高度\r\n        },\r\n        canvasCutResult: { //隐藏 渲染裁剪后的原图\r\n          cw: 0, //canvas真实宽度\r\n          ch: 0, //canvas真实高度\r\n          c: null, //Canvas\r\n          ctx: null, //Context\r\n          w: 0, //canvas样式宽度\r\n          h: 0 //canvas样式高度\r\n        },\r\n        cut: {\r\n          dw: 64, //默认宽度\r\n          dh: 64, //默认高度\r\n          mw: 64, //最小宽度\r\n          mh: 64, //最小高度\r\n          w: 0, //宽度\r\n          h: 0, //高度\r\n          x: 0, //x位置\r\n          y: 0, //y位置\r\n          ow: 0, //上一次宽度\r\n          oh: 0, //上一次高度\r\n          ox: 0, //上一次x位置\r\n          oy: 0, //上一次y位置\r\n          area: 30 //变化触摸范围半径\r\n        },\r\n        windowWidth: $(window).width(),\r\n        windowHeight: $(window).height()\r\n      };\r\n    },\r\n    created() {\r\n      if(this.getUploadImg.type === 0) {\r\n        this.loadFile(this.getUploadImg.src, { init: true });\r\n      } else {\r\n        this.indicator.size = this.getUploadImg.size;\r\n        this.indicator.time = parseInt(this.indicator.size / this.indicator.speed);\r\n        this.file.src = this.getUploadImg.src;\r\n        this.$nextTick(() => {\r\n          this.loadImg({ init: true });\r\n        });\r\n      }\r\n    },\r\n    mounted() {\r\n      this.canvas.c = this.$refs.canvas;\r\n      this.canvas.ctx = this.canvas.c.getContext('2d');\r\n      this.canvasCutFrame.c = this.$refs['canvas-cut-frame'];\r\n      this.canvasCutFrame.ctx = this.canvasCutFrame.c.getContext('2d');\r\n      this.canvasCut.c = this.$refs['canvas-cut'];\r\n      this.canvasCut.ctx = this.canvasCut.c.getContext('2d');\r\n      this.canvasCutResult.c = this.$refs['canvas-cut-result'];\r\n      this.canvasCutResult.ctx = this.canvasCutResult.c.getContext('2d');\r\n    },\r\n    computed: {\r\n      ...mapGetters(['getIsHScreen', 'getUploadImg']),\r\n      headerHeight() {\r\n        return 80 / 750 * lib.flexible.rem * 10;\r\n      },\r\n      bottomHeight() {\r\n        return 100 / 750 * lib.flexible.rem * 10;\r\n      },\r\n      aspectRatio() {\r\n        if(this.getIsHScreen) {\r\n          return (this.windowWidth - this.bottomHeight - 20) / (this.windowHeight - this.headerHeight - 10);\r\n        } else {\r\n          return (this.windowWidth - 10) / (this.windowHeight - this.headerHeight - this.bottomHeight - 20);\r\n        }\r\n      },\r\n      styleCanvasWrapper() {\r\n        let w, h;\r\n        if(this.getIsHScreen) {\r\n          h = this.windowHeight - 10 - this.headerHeight;\r\n          w = h * this.aspectRatio;\r\n        } else {\r\n          w = this.windowWidth - 10;\r\n          h = w / this.aspectRatio;\r\n        }\r\n        return { w, h };\r\n      },\r\n      styleCenter() {\r\n        return {\r\n          left: (this.styleCanvasWrapper.w - this.canvas.w) / 2 + this.cut.x / this.file.fixedRatio + this.cut.area / 2 + 'px',\r\n          top: (this.styleCanvasWrapper.h - this.canvas.h) / 2 + this.cut.y / this.file.fixedRatio + this.cut.area / 2 + 'px',\r\n          width: this.cut.w / this.file.fixedRatio - this.cut.area + 'px',\r\n          height: this.cut.h / this.file.fixedRatio - this.cut.area + 'px'\r\n        };\r\n      },\r\n      styleLT() {\r\n        return {\r\n          left: (this.styleCanvasWrapper.w - this.canvas.w) / 2 + this.cut.x / this.file.fixedRatio - this.cut.area / 2 + 'px',\r\n          top: (this.styleCanvasWrapper.h - this.canvas.h) / 2 + this.cut.y / this.file.fixedRatio - this.cut.area / 2 + 'px',\r\n          width: this.cut.area + 'px',\r\n          height: this.cut.area + 'px'\r\n        };\r\n      },\r\n      styleRT() {\r\n        return {\r\n          left: (this.styleCanvasWrapper.w - this.canvas.w) / 2 + (this.cut.x + this.cut.w) / this.file.fixedRatio - this.cut.area / 2 + 'px',\r\n          top: (this.styleCanvasWrapper.h - this.canvas.h) / 2 + this.cut.y / this.file.fixedRatio - this.cut.area / 2 + 'px',\r\n          width: this.cut.area + 'px',\r\n          height: this.cut.area + 'px'\r\n        };\r\n      },\r\n      styleRB() {\r\n        return {\r\n          left: (this.styleCanvasWrapper.w - this.canvas.w) / 2 + (this.cut.x + this.cut.w) / this.file.fixedRatio - this.cut.area / 2 + 'px',\r\n          top: (this.styleCanvasWrapper.h - this.canvas.h) / 2 + (this.cut.y + this.cut.h) / this.file.fixedRatio - this.cut.area / 2 + 'px',\r\n          width: this.cut.area + 'px',\r\n          height: this.cut.area + 'px'\r\n        };\r\n      },\r\n      styleLB() {\r\n        return {\r\n          left: (this.styleCanvasWrapper.w - this.canvas.w) / 2 + this.cut.x / this.file.fixedRatio - this.cut.area / 2 + 'px',\r\n          top: (this.styleCanvasWrapper.h - this.canvas.h) / 2 + (this.cut.y + this.cut.h) / this.file.fixedRatio - this.cut.area / 2 + 'px',\r\n          width: this.cut.area + 'px',\r\n          height: this.cut.area + 'px'\r\n        };\r\n      },\r\n      styleT() {\r\n        return {\r\n          left: (this.styleCanvasWrapper.w - this.canvas.w) / 2 + this.cut.x / this.file.fixedRatio + this.cut.area / 2 + 'px',\r\n          top: (this.styleCanvasWrapper.h - this.canvas.h) / 2 + this.cut.y / this.file.fixedRatio - this.cut.area / 2 + 'px',\r\n          width: this.cut.w / this.file.fixedRatio - this.cut.area + 'px',\r\n          height: this.cut.area + 'px'\r\n        };\r\n      },\r\n      styleR() {\r\n        return {\r\n          left: (this.styleCanvasWrapper.w - this.canvas.w) / 2 + (this.cut.x + this.cut.w) / this.file.fixedRatio - this.cut.area / 2 + 'px',\r\n          top: (this.styleCanvasWrapper.h - this.canvas.h) / 2 + this.cut.y / this.file.fixedRatio + this.cut.area / 2 + 'px',\r\n          width: this.cut.area + 'px',\r\n          height: this.cut.h / this.file.fixedRatio - this.cut.area + 'px'\r\n        };\r\n      },\r\n      styleB() {\r\n        return {\r\n          left: (this.styleCanvasWrapper.w - this.canvas.w) / 2 + this.cut.x / this.file.fixedRatio + this.cut.area / 2 + 'px',\r\n          top: (this.styleCanvasWrapper.h - this.canvas.h) / 2 + (this.cut.y + this.cut.h) / this.file.fixedRatio - this.cut.area / 2 + 'px',\r\n          width: this.cut.w / this.file.fixedRatio - this.cut.area + 'px',\r\n          height: this.cut.area + 'px'\r\n        };\r\n      },\r\n      styleL() {\r\n        return {\r\n          left: (this.styleCanvasWrapper.w - this.canvas.w) / 2 + this.cut.x / this.file.fixedRatio - this.cut.area / 2 + 'px',\r\n          top: (this.styleCanvasWrapper.h - this.canvas.h) / 2 + this.cut.y / this.file.fixedRatio + this.cut.area / 2 + 'px',\r\n          width: this.cut.area + 'px',\r\n          height: this.cut.h / this.file.fixedRatio - this.cut.area + 'px'\r\n        };\r\n      },\r\n      isBase64() {\r\n        if(this.file.src && /data:image\\/(png|jpeg|jpg);base64/g.test(this.file.src)) {\r\n          return true;\r\n        } else {\r\n          return false;\r\n        }\r\n      }\r\n    },\r\n    watch: {\r\n      getIsHScreen(val) {\r\n        setTimeout(() => {\r\n          this.windowWidth = $(window).width();\r\n          this.windowHeight = $(window).height();\r\n          this.loadImg();\r\n        }, 500);\r\n      },\r\n      getUploadImg(val, oldVal) {\r\n        if(val.src !== oldVal.src) {\r\n          this.loadFile(val.src, { init: true });\r\n        }\r\n      },\r\n      'indicator.progress'(val) {\r\n        //加载图片时\r\n        if(!this.file.img) {\r\n          if(val === -1) { //下载失败\r\n            Toast(this.$t('common.requestFailed'));\r\n            setTimeout(() => {\r\n              this.$router.go(-1);\r\n            }, 300);\r\n          } else if(val === -2) { //点击了取消\r\n            this.$router.go(-1);\r\n          }\r\n        }\r\n        this.indicator.time = parseInt(this.indicator.size / this.indicator.speed * (1 - val / 100));\r\n      }\r\n    },\r\n    methods: {\r\n      ...mapMutations(['setUploadImg']),\r\n      //选择文件\r\n      openPics() {\r\n        this.$refs.imgupload.createEventBroadcast();\r\n      },\r\n      //加载文件\r\n      loadFile(file, ...options) {\r\n        if(!file) {\r\n          return false;\r\n        }\r\n        this.openIndicator();\r\n        let reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onload = e => {\r\n          this.closeIndicator();\r\n          this.file.src = e.target.result;\r\n          this.setUploadImg({ name: file.name });\r\n          this.loadImg(options);\r\n        };\r\n        reader.onerror = e => {\r\n          this.closeIndicator();\r\n        };\r\n      },\r\n      //加载图片 计算画布大小，计算缩放比例\r\n      loadImg({ init = false, restore = false } = {}) {\r\n        let img = null;\r\n        if(init || restore) {\r\n          img = this.$refs.loadedImg;\r\n          if(init) {\r\n            img.src = this.file.src;\r\n          }\r\n        } else {\r\n          img = new Image();\r\n          img.src = this.file.src;\r\n        }\r\n\r\n        if(!this.isBase64 && !img.complete && this.getUploadImg.type === 1) {\r\n          this.indicator.showIndicatoe = true;\r\n          this.getProgress();\r\n        } else {\r\n          this.openIndicator();\r\n        }\r\n\r\n        if(img.complete) {\r\n          this.handleLoadImg(img);\r\n        } else {\r\n          img.onload = () => {\r\n            this.handleLoadImg(img);\r\n          };\r\n        }\r\n\r\n        img.onerror = () => {\r\n          this.indicator.showIndicatoe = false;\r\n          this.closeIndicator();\r\n        };\r\n      },\r\n      handleLoadImg(img) {\r\n        this.indicator.showIndicatoe = false;\r\n        this.closeIndicator();\r\n        this.file.img = img;\r\n        this.file.orient = this.getPhotoOrientation(img);\r\n        this.initCanvas();\r\n        this.cancelCut();\r\n        this.drawImage();\r\n\r\n        //如果图片是url，一并把原图也渲染出来(防止之后裁剪的时候再次请求image)\r\n        if(!this.isBase64) {\r\n          this.canvasCut.cw = this.file.img.width;\r\n          this.canvasCut.ch = this.file.img.height;\r\n          this.canvasCut.c.width = Math.round(this.canvasCut.cw);\r\n          this.canvasCut.c.height = Math.round(this.canvasCut.ch);\r\n          this.canvasCut.ctx.clearRect(0, 0, this.canvasCut.cw, this.canvasCut.ch);\r\n          this.canvasCut.ctx.drawImage(this.file.img, 0, 0, this.canvasCut.cw, this.canvasCut.ch);\r\n        }\r\n\r\n        if(img.width > 1920 || img.height > 1080) {\r\n          this.openCut();\r\n        }\r\n      },\r\n      //初始化canvas\r\n      initCanvas() {\r\n        let width = this.file.img.width;\r\n        let height = this.file.img.height;\r\n        if(this.file.orient === 6 || this.file.orient === 8) {\r\n          width = this.file.img.height;\r\n          height = this.file.img.width;\r\n        }\r\n\r\n        if(this.getIsHScreen) {\r\n          if(width / height > this.aspectRatio) { //横屏横放\r\n            this.canvas.cw = (this.windowHeight - 10 - this.headerHeight) * this.file.fixedRatio * this.aspectRatio;\r\n            this.canvas.ch = this.canvas.cw / (width / height);\r\n          } else { //横屏竖放\r\n            this.canvas.ch = (this.windowHeight - 10 - this.headerHeight) * this.file.fixedRatio;\r\n            this.canvas.cw = this.canvas.ch * width / height;\r\n          }\r\n        } else {\r\n          if(width / height > this.aspectRatio) { //竖屏横放\r\n            this.canvas.cw = (this.windowWidth - 10) * this.file.fixedRatio;\r\n            this.canvas.ch = this.canvas.cw / (width / height);\r\n          } else { //竖屏竖放\r\n            this.canvas.ch = (this.windowWidth - 10) * this.file.fixedRatio / this.aspectRatio;\r\n            this.canvas.cw = this.canvas.ch * width / height;\r\n          }\r\n        }\r\n\r\n        this.canvas.c.width = Math.round(this.canvas.cw);\r\n        this.canvas.c.height = Math.round(this.canvas.ch);\r\n        this.canvas.w = this.canvas.cw / this.file.fixedRatio;\r\n        this.canvas.h = this.canvas.ch / this.file.fixedRatio;\r\n        this.canvas.x = this.styleCanvasWrapper.w / 2 - this.canvas.w / 2;\r\n        this.canvas.y = this.styleCanvasWrapper.h / 2 - this.canvas.h / 2;\r\n\r\n        this.canvasCutFrame.c.width = Math.round(this.canvas.cw);\r\n        this.canvasCutFrame.c.height = Math.round(this.canvas.ch);\r\n        this.canvasCutFrame.w = this.canvas.cw;\r\n        this.canvasCutFrame.h = this.canvas.ch;\r\n        this.canvasCutFrame.x = this.canvas.x;\r\n        this.canvasCutFrame.y = this.canvas.y;\r\n\r\n        this.file.realRatio = width / this.canvas.cw;\r\n        this.cut.mw = Math.max(this.cut.dw * this.file.fixedRatio, this.cut.dw / this.file.realRatio);\r\n        this.cut.mh = Math.max(this.cut.dh * this.file.fixedRatio, this.cut.dh / this.file.realRatio);\r\n      },\r\n      //渲染图片到canvas\r\n      drawImage() {\r\n        if(this.file.orient > 1) {\r\n          this.canvas.ctx.clearRect(0, 0, this.canvas.cw, this.canvas.ch);\r\n          this.canvas.ctx.save();//保存状态\r\n          if(this.file.orient === 3) {\r\n            this.canvas.ctx.rotate(Math.PI);//把画布旋转180度\r\n            this.canvas.ctx.drawImage(this.file.img, -this.canvas.cw, -this.canvas.ch, this.canvas.cw, this.canvas.ch);\r\n          } else {\r\n            this.canvas.ctx.translate(this.canvas.cw / 2, this.canvas.ch / 2);//设置画布上的(0,0)位置，也就是旋转的中心点\r\n            this.canvas.ctx.rotate((this.file.orient === 6 ? 90 : -90) * Math.PI / 180);//把画布旋转90度\r\n            this.canvas.ctx.translate(-this.canvas.ch / 2, -this.canvas.cw / 2);\r\n            this.canvas.ctx.drawImage(this.file.img, 0, 0, this.canvas.ch, this.canvas.cw);\r\n          }\r\n          this.canvas.ctx.restore();//恢复状态\r\n        } else {\r\n          this.canvas.ctx.clearRect(0, 0, this.canvas.cw, this.canvas.ch);\r\n          this.canvas.ctx.drawImage(this.file.img, 0, 0, this.canvas.cw, this.canvas.ch);\r\n        }\r\n      },\r\n      //初始化cut\r\n      initCut() {\r\n        this.cut.w = this.canvas.cw;\r\n        this.cut.h = this.canvas.ch;\r\n        this.cut.x = 0;\r\n        this.cut.y = 0;\r\n        this.cut.ow = this.cut.w;\r\n        this.cut.oh = this.cut.h;\r\n        this.cut.ox = this.cut.x;\r\n        this.cut.oy = this.cut.y;\r\n      },\r\n      //渲染裁剪框\r\n      drawCut() {\r\n        this.canvasCutFrame.ctx.clearRect(0, 0, this.canvas.cw, this.canvas.ch);\r\n        this.canvasCutFrame.ctx.fillStyle = 'rgba(0,0,0,0.8)';\r\n        this.canvasCutFrame.ctx.fillRect(0, 0, this.canvas.cw, this.canvas.ch);\r\n        this.canvasCutFrame.ctx.clearRect(this.cut.x, this.cut.y, this.cut.w, this.cut.h);\r\n\r\n        this.canvasCutFrame.ctx.strokeStyle = 'rgba(255,255,255,0.8)';\r\n        this.canvasCutFrame.ctx.lineWidth = this.file.fixedRatio;\r\n        this.canvasCutFrame.ctx.beginPath();\r\n        this.canvasCutFrame.ctx.moveTo(this.cut.x, this.cut.y);\r\n        this.canvasCutFrame.ctx.lineTo(this.cut.x + this.cut.w, this.cut.y);\r\n        this.canvasCutFrame.ctx.moveTo(this.cut.x, this.cut.y + this.cut.h / 3);\r\n        this.canvasCutFrame.ctx.lineTo(this.cut.x + this.cut.w, this.cut.y + this.cut.h / 3);\r\n        this.canvasCutFrame.ctx.moveTo(this.cut.x, this.cut.y + this.cut.h / 3 * 2);\r\n        this.canvasCutFrame.ctx.lineTo(this.cut.x + this.cut.w, this.cut.y + this.cut.h / 3 * 2);\r\n        this.canvasCutFrame.ctx.moveTo(this.cut.x, this.cut.y + this.cut.h);\r\n        this.canvasCutFrame.ctx.lineTo(this.cut.x + this.cut.w, this.cut.y + this.cut.h);\r\n        this.canvasCutFrame.ctx.moveTo(this.cut.x, this.cut.y);\r\n        this.canvasCutFrame.ctx.lineTo(this.cut.x, this.cut.y + this.cut.h);\r\n        this.canvasCutFrame.ctx.moveTo(this.cut.x + this.cut.w / 3, this.cut.y);\r\n        this.canvasCutFrame.ctx.lineTo(this.cut.x + this.cut.w / 3, this.cut.y + this.cut.h);\r\n        this.canvasCutFrame.ctx.moveTo(this.cut.x + this.cut.w / 3 * 2, this.cut.y);\r\n        this.canvasCutFrame.ctx.lineTo(this.cut.x + this.cut.w / 3 * 2, this.cut.y + this.cut.h);\r\n        this.canvasCutFrame.ctx.moveTo(this.cut.x + this.cut.w, this.cut.y);\r\n        this.canvasCutFrame.ctx.lineTo(this.cut.x + this.cut.w, this.cut.y + this.cut.h);\r\n        this.canvasCutFrame.ctx.closePath();\r\n        this.canvasCutFrame.ctx.stroke();\r\n      },\r\n      //移动裁剪框\r\n      moveCenter(eventName, e, hammer) {\r\n        if(eventName === 'panend' || eventName === 'pancancel') {\r\n          this.panEnd();\r\n        } else {\r\n          this.cut.x = Math.min(Math.max(this.cut.ox + e.deltaX * this.file.fixedRatio, 0), this.canvas.cw - this.cut.w);\r\n          this.cut.y = Math.min(Math.max(this.cut.oy + e.deltaY * this.file.fixedRatio, 0), this.canvas.ch - this.cut.h);\r\n          this.drawCut();\r\n        }\r\n      },\r\n      //移动边角\r\n      moveCorner(eventName, e, hammer, { left, right, top, bottom }) {\r\n        if(eventName === 'panend' || eventName === 'pancancel') {\r\n          this.panEnd();\r\n        } else {\r\n          if(left) {\r\n            this.cut.x = Math.min(Math.max(this.cut.ox + e.deltaX * this.file.fixedRatio, 0), this.cut.ox + this.cut.ow - this.cut.mw);\r\n            this.cut.w = Math.min(Math.max(this.cut.ow - e.deltaX * this.file.fixedRatio, this.cut.mw), this.cut.ox + this.cut.ow);\r\n          }\r\n          if(right) {\r\n            this.cut.w = Math.min(Math.max(this.cut.ow + e.deltaX * this.file.fixedRatio, this.cut.mw), this.canvas.cw - this.cut.ox);\r\n          }\r\n          if(top) {\r\n            this.cut.y = Math.min(Math.max(this.cut.oy + e.deltaY * this.file.fixedRatio, 0), this.cut.oy + this.cut.oh - this.cut.mh);\r\n            this.cut.h = Math.min(Math.max(this.cut.oh - e.deltaY * this.file.fixedRatio, this.cut.mh), this.cut.oy + this.cut.oh);\r\n          }\r\n          if(bottom) {\r\n            this.cut.h = Math.min(Math.max(this.cut.oh + e.deltaY * this.file.fixedRatio, this.cut.mh), this.canvas.ch - this.cut.oy);\r\n          }\r\n          this.drawCut();\r\n        }\r\n      },\r\n      //左上角\r\n      moveLT(eventName, e, hammer) {\r\n        this.moveCorner(eventName, e, hammer, { left: true, top: true });\r\n      },\r\n      //右上角\r\n      moveRT(eventName, e, hammer) {\r\n        this.moveCorner(eventName, e, hammer, { right: true, top: true });\r\n      },\r\n      //右下角\r\n      moveRB(eventName, e, hammer) {\r\n        this.moveCorner(eventName, e, hammer, { right: true, bottom: true });\r\n      },\r\n      //左下角\r\n      moveLB(eventName, e, hammer) {\r\n        this.moveCorner(eventName, e, hammer, { left: true, bottom: true });\r\n      },\r\n      //上边\r\n      moveT(eventName, e, hammer) {\r\n        this.moveCorner(eventName, e, hammer, { top: true });\r\n      },\r\n      //右边\r\n      moveR(eventName, e, hammer) {\r\n        this.moveCorner(eventName, e, hammer, { right: true });\r\n      },\r\n      //下边\r\n      moveB(eventName, e, hammer) {\r\n        this.moveCorner(eventName, e, hammer, { bottom: true });\r\n      },\r\n      //左边\r\n      moveL(eventName, e, hammer) {\r\n        this.moveCorner(eventName, e, hammer, { left: true });\r\n      },\r\n      //放开拖拽\r\n      panEnd() {\r\n        this.cut.ox = this.cut.x;\r\n        this.cut.oy = this.cut.y;\r\n        this.cut.ow = this.cut.w;\r\n        this.cut.oh = this.cut.h;\r\n      },\r\n      //渲染图片到canvas\r\n      drawImageCut(cb) {\r\n        if(!this.isBase64) {\r\n          cb();\r\n          return false;\r\n        }\r\n\r\n        let width = this.file.img.width;\r\n        let height = this.file.img.height;\r\n        if(this.file.orient === 6 || this.file.orient === 8) {\r\n          width = this.file.img.height;\r\n          height = this.file.img.width;\r\n        }\r\n\r\n        this.canvasCut.cw = width;\r\n        this.canvasCut.ch = height;\r\n        this.canvasCut.c.width = Math.round(this.canvasCut.cw);\r\n        this.canvasCut.c.height = Math.round(this.canvasCut.ch);\r\n        this.canvasCut.ctx.clearRect(0, 0, this.canvasCut.cw, this.canvasCut.ch);\r\n\r\n        let w = 0, h = 0, x = 0, y = 0;\r\n        let img = new Image();\r\n        img.crossOrigin = '*';\r\n        img.src = this.file.src;\r\n        img.onload = () => {\r\n          if(this.file.orient > 1) {\r\n            this.canvasCut.ctx.clearRect(0, 0, this.canvasCut.cw, this.canvasCut.ch);\r\n            this.canvasCut.ctx.save();//保存状态\r\n            if(this.file.orient === 3) {\r\n              this.canvasCut.ctx.rotate(Math.PI);//把画布旋转180度\r\n              this.canvasCut.ctx.drawImage(this.file.img, -this.canvasCut.cw, -this.canvasCut.ch, this.canvasCut.cw, this.canvasCut.ch);\r\n            } else {\r\n              this.canvasCut.ctx.translate(this.canvasCut.cw / 2, this.canvasCut.ch / 2);//设置画布上的(0,0)位置，也就是旋转的中心点\r\n              this.canvasCut.ctx.rotate((this.file.orient === 6 ? 90 : -90) * Math.PI / 180);//把画布旋转90度\r\n              this.canvasCut.ctx.translate(-this.canvasCut.ch / 2, -this.canvasCut.cw / 2);\r\n              this.canvasCut.ctx.drawImage(this.file.img, 0, 0, this.canvasCut.ch, this.canvasCut.cw);\r\n            }\r\n            this.canvasCut.ctx.restore();//恢复状态\r\n          } else {\r\n            this.canvasCut.ctx.drawImage(img, 0, 0);\r\n          }\r\n          cb();\r\n        };\r\n      },\r\n      //还原裁剪\r\n      restore() {\r\n        this.activeTab = 1;\r\n        if(this.getUploadImg.type === 0) {\r\n          this.loadFile(this.getUploadImg.src, { restore: true });\r\n        } else {\r\n          this.file.src = this.getUploadImg.src;\r\n          this.loadImg({ restore: true });\r\n        }\r\n      },\r\n      //打开裁剪\r\n      openCut() {\r\n        this.activeTab = 2;\r\n        this.drawCut();\r\n      },\r\n      //裁剪\r\n      imgCut() {\r\n        this.openIndicator();\r\n        this.drawImageCut(() => {\r\n          let imgData = this.canvasCut.ctx.getImageData(this.cut.x * this.file.realRatio, this.cut.y * this.file.realRatio, this.cut.w * this.file.realRatio, this.cut.h * this.file.realRatio);//根据裁剪坐标获取要裁剪的imgData\r\n          this.canvasCutResult.c.width = Math.round(this.cut.w * this.file.realRatio); //设置临时canvas宽度\r\n          this.canvasCutResult.c.height = Math.round(this.cut.h * this.file.realRatio); //设置临时canvas高度\r\n          this.canvasCutResult.ctx.putImageData(imgData, 0, 0); //将imgData渲染到一个临时的canvas上\r\n          setTimeout(() => {\r\n            let src = this.canvasCutResult.c.toDataURL('image/png'); //将canvas转换成base64图片\r\n            this.file.src = src; //替换原图，准备二次裁剪\r\n            this.loadImg();\r\n            this.closeIndicator();\r\n          }, 300);\r\n        });\r\n      },\r\n      //取消裁剪\r\n      cancelCut() {\r\n        this.initCut();\r\n        this.activeTab = null;\r\n      },\r\n      toggleBgColor() {\r\n        if(this.activeTab === 4) {\r\n          this.activeTab = null;\r\n        } else {\r\n          this.activeTab = 4;\r\n        }\r\n      },\r\n      //修改背景色\r\n      changeBgColor(index) {\r\n        this.selectedBackground = index;\r\n      },\r\n      //上传文件\r\n      upload() {\r\n        if(!this.file.img) {\r\n          return false;\r\n        }\r\n        if(this.file.img.width > 1920 || this.file.img.height > 1080) {\r\n          Toast(this.$t('osd.overSize'));\r\n          return false;\r\n        }\r\n\r\n        if(!this.isBase64) {\r\n          setTimeout(() => {\r\n            this.$router.go(-1);\r\n          }, 300);\r\n          return false;\r\n        }\r\n\r\n        htp.post(urls.setOsdEditInfo, { type: 0, id: this.getUploadImg.type === 1 ? this.getUploadImg.id : -1 }, { loading: false }).then(res => {\r\n          if(res.status === 10000000) {\r\n            this.indicator.showIndicatoe = true;\r\n            this.indicator.speed = 2371;\r\n            this.indicator.size = this.file.img.width * this.file.img.height;\r\n            this.indicator.time = parseInt(this.indicator.size / this.indicator.speed);\r\n            this.indicator.progress = 0;\r\n            this.getProgress();\r\n            let file = dataURLtoFile(this.file.src, this.getUploadImg.name); //将base64图片转换为文件\r\n            let formData = new FormData();\r\n            formData.append(this.getUploadImg.name, file);\r\n            htp.upload(urls.uploadOSD, formData).then(res => {\r\n              this.indicator.showIndicatoe = false;\r\n              if(res.status === 10000000) {\r\n                Toast(this.$t('osd.uploadSuccess'));\r\n                setTimeout(() => {\r\n                  this.$router.go(-1);\r\n                }, 300);\r\n              } else if(res.errorCode[0] === 20070001) {\r\n                // Toast(this.$t('osd.cancelSuccess'));\r\n              } else if(res.errorCode[0] === 20070002) {\r\n                Toast(this.$t('osd.OSDBusy'));\r\n              } else {\r\n                Toast(this.$t('common.serverException'));\r\n              }\r\n            });\r\n          }\r\n        });\r\n      },\r\n      //递归获取进度\r\n      getProgress() {\r\n        if(this.indicator.progress === -2 || this.indicator.progress === -1) {\r\n          return false;\r\n        }\r\n\r\n        htp.post(urls.getProgress, { control: 1 }, { loading: false }).then(res => {\r\n          if(res.status === 10000000) {\r\n            if(this.indicator.progress !== -2) {\r\n              this.indicator.progress = res.data.progress;\r\n              if(this.indicator.progress === -1 || res.data.progress === 100) {\r\n                this.indicator.showIndicatoe = false;\r\n              } else {\r\n                this.getProgress();\r\n              }\r\n            }\r\n          }\r\n        });\r\n      },\r\n      //取消发送\r\n      progressCancel() {\r\n        Confirm(this.$t('osd.cancelOSD')).then(active => {\r\n          htp.post(urls.getProgress, { control: 0 }, { loading: false }).then(res => {\r\n            this.indicator.progress = -2;\r\n            this.indicator.showIndicatoe = false;\r\n          });\r\n        });\r\n      },\r\n      //打开遮罩层\r\n      openIndicator(text) {\r\n        Indicator.open({ text });\r\n      },\r\n      //关闭遮罩层\r\n      closeIndicator() {\r\n        setTimeout(() => {\r\n          Indicator.close();\r\n        }, 100);\r\n      },\r\n      //获取照片的元信息（拍摄方向）\r\n      getPhotoOrientation(img) {\r\n        var orient = 0;\r\n        if(this.isBase64) {\r\n          EXIF.getData(img, function() {\r\n            orient = EXIF.getTag(this, 'Orientation');\r\n          });\r\n        }\r\n        return orient;\r\n      }\r\n    }\r\n  };\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n  .osd-warp {\r\n    overflow: hidden;\r\n  }\r\n\r\n  .corner {\r\n    position: absolute;\r\n    &.corner-left-top {\r\n      background: url('../../assets/osd/corner-left-top.png') no-repeat;\r\n      background-size: 100% 100%;\r\n    }\r\n    &.corner-right-top {\r\n      background: url('../../assets/osd/corner-right-top.png') no-repeat;\r\n      background-size: 100% 100%;\r\n    }\r\n    &.corner-right-bottom {\r\n      background: url('../../assets/osd/corner-right-bottom.png') no-repeat;\r\n      background-size: 100% 100%;\r\n    }\r\n    &.corner-left-bottom {\r\n      background: url('../../assets/osd/corner-left-bottom.png') no-repeat;\r\n      background-size: 100% 100%;\r\n    }\r\n  }\r\n\r\n  .operators {\r\n    .operators-item {\r\n      flex: 1;\r\n\r\n      .resetpic {\r\n        background: url('../../assets/common/resetpic.png') no-repeat;\r\n      }\r\n      .cutpic {\r\n        background: url('../../assets/common/cutpic.png') no-repeat;\r\n      }\r\n      .picture {\r\n        background: url('../../assets/common/picture.png') no-repeat;\r\n      }\r\n      .background {\r\n        background: url('../../assets/common/background.png') no-repeat;\r\n      }\r\n\r\n      .resetpic-o {\r\n        background: url('../../assets/common/resetpic.png') no-repeat;\r\n      }\r\n      .cutpic-o {\r\n        background: url('../../assets/common/cutpic-o.png') no-repeat;\r\n      }\r\n      .picture-o {\r\n        background: url('../../assets/common/picture.png') no-repeat;\r\n      }\r\n      .background-o {\r\n        background: url('../../assets/common/background-o.png') no-repeat;\r\n      }\r\n\r\n      .operators-item-text {\r\n        color: #f8f8f8;\r\n        font-size: 28px;\r\n      }\r\n    }\r\n  }\r\n\r\n  .operator-tabs {\r\n    .backgroundtab {\r\n      background-color: #212124;\r\n      .bgitem {\r\n        height: 80px;\r\n        width: 80px;\r\n        margin: 0 auto;\r\n        border: 1px solid #6f6f70;\r\n        border-radius: 50%;\r\n      }\r\n      .white {\r\n        background-color: #ffffff;\r\n      }\r\n      .blue {\r\n        background-color: #65e0d9;\r\n      }\r\n      .pink {\r\n        background-color: #aa71d2;\r\n      }\r\n      .blank {\r\n        background-color: #060606;\r\n      }\r\n      .selected {\r\n        border: 2px solid #f56800; /*no*/\r\n      }\r\n    }\r\n  }\r\n\r\n  .cut-size {\r\n    color: red;\r\n    font-size: 14px; /*no*/\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    z-index: 1;\r\n  }\r\n\r\n  @media screen and (orientation: landscape) {\r\n    .edit-osd {\r\n      padding-top: 80px;\r\n    }\r\n    .osd-warp {\r\n      position: relative;\r\n      height: 100%;\r\n      .operators {\r\n        width: 100px;\r\n        height: 100%;\r\n        border-right: 1px solid #5c606f; /*no*/\r\n        display: flex;\r\n        flex-direction: column;\r\n        .operators-item-icon {\r\n          height: 100%;\r\n          width: 100%;\r\n          background-size: 46px 46px;\r\n          background-position: center;\r\n        }\r\n      }\r\n\r\n      .edit-warp {\r\n        .canvas {\r\n          background-color: transparent;\r\n          position: absolute;\r\n          left: 0;\r\n          top: 0;\r\n        }\r\n      }\r\n\r\n      .operator-tabs {\r\n        position: absolute;\r\n        left: 100px;\r\n        top: 0;\r\n        width: 100px;\r\n        height: 100%;\r\n        .backgroundtab {\r\n          height: 100%;\r\n          display: flex;\r\n          align-items: center;\r\n          justify-content: space-around;\r\n          flex-direction: column;\r\n        }\r\n      }\r\n      .cuttab {\r\n        width: 100px;\r\n        display: flex;\r\n        position: fixed;\r\n        top: 80px;\r\n        bottom: 0;\r\n        left: 0;\r\n        justify-content: space-between;\r\n        flex-direction: column;\r\n        z-index: 3;\r\n        border-right: 1px solid #5c606f; /*no*/\r\n        background-color: #212124;\r\n        .del,\r\n        .ok,\r\n        .title {\r\n          font-size: 28px;\r\n          padding: 28px 0;\r\n        }\r\n        .ok {\r\n          color: #f56800;\r\n        }\r\n        .del,\r\n        .title {\r\n          color: #ddd;\r\n        }\r\n        .title {\r\n          font-size: 19px; /*no*/\r\n        }\r\n      }\r\n    }\r\n    .horizontal {\r\n      margin: 5px 10px; /*no*/\r\n      position: absolute;\r\n      right: 0;\r\n    }\r\n  }\r\n\r\n  @media screen and (orientation: portrait) {\r\n    .osd-warp {\r\n      .operators {\r\n        position: fixed;\r\n        height: 100px;\r\n        width: 100%;\r\n        bottom: 0;\r\n        left: 0;\r\n        display: flex;\r\n        border-top: 1px solid #5c606f; /*no*/\r\n        .operators-item-icon {\r\n          height: 100px;\r\n          width: 100%;\r\n          background-size: 46px 46px;\r\n          background-position: center;\r\n        }\r\n      }\r\n\r\n      .edit-warp {\r\n        height: 880px;\r\n        width: auto;\r\n        position: relative;\r\n        margin: 10px 5px; /*no*/\r\n        background: #141416;\r\n        .canvas {\r\n          background-color: transparent;\r\n          position: absolute;\r\n          left: 0;\r\n          top: 0;\r\n        }\r\n      }\r\n\r\n      .operator-tabs {\r\n        position: fixed;\r\n        bottom: 100px;\r\n        width: 100%;\r\n        height: 100px;\r\n        .backgroundtab {\r\n          height: 100%;\r\n          display: flex;\r\n          align-items: center;\r\n        }\r\n      }\r\n      .cuttab {\r\n        width: 100%;\r\n        height: 100px;\r\n        display: flex;\r\n        position: fixed;\r\n        bottom: 0;\r\n        left: 0;\r\n        justify-content: space-between;\r\n        z-index: 3;\r\n        border-top: 1px solid #5c606f; /*no*/\r\n        background-color: #212124;\r\n        .del,\r\n        .ok,\r\n        .title {\r\n          font-size: 28px;\r\n          padding: 0 28px;\r\n          height: 100px;\r\n          line-height: 100px;\r\n        }\r\n        .ok {\r\n          color: #f56800;\r\n        }\r\n        .del,\r\n        .title {\r\n          color: #ddd;\r\n        }\r\n        .title {\r\n          font-size: 19px; /*no*/\r\n        }\r\n      }\r\n    }\r\n  }\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/pages/osd/edit.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"edit-osd\"},[_c('vx-header',{attrs:{\"showcancel\":_vm.activeTab !== 2,\"showOsdFont\":_vm.activeTab !== 2,\"title\":_vm.activeTab === 2 ? _vm.$t('osd.crop') : 'OSD'},on:{\"savesFont\":_vm.upload,\"cancel\":function($event){_vm.$router.go(-1)}}}),_vm._v(\" \"),_c('img',{directives:[{name:\"show\",rawName:\"v-show\",value:(0),expression:\"0\"}],ref:\"loadedImg\",attrs:{\"src\":\"\",\"crossOrigin\":\"*\"}}),_vm._v(\" \"),_c('div',{staticClass:\"osd-warp\",class:{'vx-container':!_vm.getIsHScreen}},[_c('div',{staticClass:\"edit-warp\",class:{horizontal: _vm.getIsHScreen},style:({width: _vm.styleCanvasWrapper.w + 'px', height: _vm.styleCanvasWrapper.h + 'px', backgroundColor: _vm.bgColors[_vm.selectedBackground] || '#212124'})},[_c('span',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.activeTab == 2),expression:\"activeTab == 2\"}],staticClass:\"cut-size\"},[_vm._v(_vm._s(Math.round(_vm.cut.w * _vm.file.realRatio))+\"*\"+_vm._s(Math.round(_vm.cut.h * _vm.file.realRatio)))]),_vm._v(\" \"),_c('canvas',{ref:\"canvas\",staticClass:\"canvas\",style:({width: _vm.canvas.w + 'px', height: _vm.canvas.h + 'px', left: _vm.canvas.x + 'px', top: _vm.canvas.y + 'px'})}),_vm._v(\" \"),_c('canvas',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.activeTab == 2),expression:\"activeTab == 2\"}],ref:\"canvas-cut-frame\",staticClass:\"canvas\",style:({width: _vm.canvas.w + 'px', height: _vm.canvas.h + 'px', left: _vm.canvas.x + 'px', top: _vm.canvas.y + 'px'}),attrs:{\"index\":0}}),_vm._v(\" \"),_c('canvas',{directives:[{name:\"show\",rawName:\"v-show\",value:(0),expression:\"0\"}],ref:\"canvas-cut\",staticClass:\"canvas\"}),_vm._v(\" \"),_c('canvas',{directives:[{name:\"show\",rawName:\"v-show\",value:(0),expression:\"0\"}],ref:\"canvas-cut-result\",staticClass:\"canvas\"}),_vm._v(\" \"),(_vm.activeTab == 2)?[_c('div',{directives:[{name:\"touch\",rawName:\"v-touch.pan\",value:(_vm.moveCenter),expression:\"moveCenter\",modifiers:{\"pan\":true}}],staticClass:\"corner\",style:(_vm.styleCenter),attrs:{\"index\":0}}),_vm._v(\" \"),_c('div',{directives:[{name:\"touch\",rawName:\"v-touch.pan\",value:(_vm.moveLT),expression:\"moveLT\",modifiers:{\"pan\":true}}],staticClass:\"corner corner-left-top\",style:(_vm.styleLT),attrs:{\"index\":0}}),_vm._v(\" \"),_c('div',{directives:[{name:\"touch\",rawName:\"v-touch.pan\",value:(_vm.moveRT),expression:\"moveRT\",modifiers:{\"pan\":true}}],staticClass:\"corner corner-right-top\",style:(_vm.styleRT),attrs:{\"index\":0}}),_vm._v(\" \"),_c('div',{directives:[{name:\"touch\",rawName:\"v-touch.pan\",value:(_vm.moveRB),expression:\"moveRB\",modifiers:{\"pan\":true}}],staticClass:\"corner corner-right-bottom\",style:(_vm.styleRB),attrs:{\"index\":0}}),_vm._v(\" \"),_c('div',{directives:[{name:\"touch\",rawName:\"v-touch.pan\",value:(_vm.moveLB),expression:\"moveLB\",modifiers:{\"pan\":true}}],staticClass:\"corner corner-left-bottom\",style:(_vm.styleLB),attrs:{\"index\":0}}),_vm._v(\" \"),_c('div',{directives:[{name:\"touch\",rawName:\"v-touch.pan\",value:(_vm.moveT),expression:\"moveT\",modifiers:{\"pan\":true}}],staticClass:\"corner\",style:(_vm.styleT),attrs:{\"index\":0}}),_vm._v(\" \"),_c('div',{directives:[{name:\"touch\",rawName:\"v-touch.pan\",value:(_vm.moveR),expression:\"moveR\",modifiers:{\"pan\":true}}],staticClass:\"corner\",style:(_vm.styleR),attrs:{\"index\":0}}),_vm._v(\" \"),_c('div',{directives:[{name:\"touch\",rawName:\"v-touch.pan\",value:(_vm.moveB),expression:\"moveB\",modifiers:{\"pan\":true}}],staticClass:\"corner\",style:(_vm.styleB),attrs:{\"index\":0}}),_vm._v(\" \"),_c('div',{directives:[{name:\"touch\",rawName:\"v-touch.pan\",value:(_vm.moveL),expression:\"moveL\",modifiers:{\"pan\":true}}],staticClass:\"corner\",style:(_vm.styleL),attrs:{\"index\":0}})]:_vm._e()],2),_vm._v(\" \"),(_vm.activeTab == 4)?_c('div',{staticClass:\"operator-tabs\"},[_c('div',{staticClass:\"backgroundtab\"},_vm._l((_vm.bgColors),function(item,index){return _c('div',{staticClass:\"bgitem\",class:{'selected':_vm.selectedBackground == index},style:({backgroundColor: item}),on:{\"click\":function($event){_vm.changeBgColor(index)}}})}))]):_vm._e(),_vm._v(\" \"),(_vm.activeTab == 2)?_c('div',{staticClass:\"cuttab\"},[_c('div',{staticClass:\"del btn\",on:{\"click\":_vm.cancelCut}},[_vm._v(_vm._s(_vm.$t('common.cancel')))]),_vm._v(\" \"),_c('div',{staticClass:\"ok btn\",on:{\"click\":_vm.imgCut}},[_vm._v(_vm._s(_vm.$t('common.complete')))])]):_vm._e(),_vm._v(\" \"),_c('div',{staticClass:\"operators\"},[_c('div',{staticClass:\"operators-item btn\",on:{\"click\":_vm.restore}},[_c('div',{staticClass:\"operators-item-icon\",class:{'resetpic-o':_vm.activeTab==1,'resetpic':_vm.activeTab!=1}})]),_vm._v(\" \"),_c('div',{staticClass:\"operators-item btn\",on:{\"click\":_vm.openCut}},[_c('div',{staticClass:\"operators-item-icon cutpic\",class:{'cutpic-o':_vm.activeTab==2,'cutpic':_vm.activeTab!=2}})]),_vm._v(\" \"),_c('div',{staticClass:\"operators-item btn\",on:{\"click\":_vm.openPics}},[_c('div',{staticClass:\"operators-item-icon picture\",class:{'picture-o':_vm.activeTab==3,'picture':_vm.activeTab!=3}})]),_vm._v(\" \"),_c('div',{staticClass:\"operators-item btn\",on:{\"click\":_vm.toggleBgColor}},[_c('div',{staticClass:\"operators-item-icon background\",class:{'background-o':_vm.activeTab==4,'background':_vm.activeTab!=4}})])])]),_vm._v(\" \"),_c('vx-imgupload',{ref:\"imgupload\"}),_vm._v(\" \"),(_vm.indicator.showIndicatoe)?_c('vx-indicator',{attrs:{\"text\":_vm.indicator.progress,\"time\":_vm.indicator.time},on:{\"progressCancel\":_vm.progressCancel}}):_vm._e()],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-e20b81c0\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/pages/osd/edit.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"minimize\\\":true,\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-e20b81c0\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!px2rem-loader?{\\\"remUnit\\\":75}!less-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./edit.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./edit.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./edit.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-e20b81c0\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./edit.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-e20b81c0\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/pages/osd/edit.vue\n// module id = null\n// module chunks = ","(function() {\n\n    var debug = false;\n\n    var root = this;\n\n    var EXIF = function(obj) {\n        if (obj instanceof EXIF) return obj;\n        if (!(this instanceof EXIF)) return new EXIF(obj);\n        this.EXIFwrapped = obj;\n    };\n\n    if (typeof exports !== 'undefined') {\n        if (typeof module !== 'undefined' && module.exports) {\n            exports = module.exports = EXIF;\n        }\n        exports.EXIF = EXIF;\n    } else {\n        root.EXIF = EXIF;\n    }\n\n    var ExifTags = EXIF.Tags = {\n\n        // version tags\n        0x9000 : \"ExifVersion\",             // EXIF version\n        0xA000 : \"FlashpixVersion\",         // Flashpix format version\n\n        // colorspace tags\n        0xA001 : \"ColorSpace\",              // Color space information tag\n\n        // image configuration\n        0xA002 : \"PixelXDimension\",         // Valid width of meaningful image\n        0xA003 : \"PixelYDimension\",         // Valid height of meaningful image\n        0x9101 : \"ComponentsConfiguration\", // Information about channels\n        0x9102 : \"CompressedBitsPerPixel\",  // Compressed bits per pixel\n\n        // user information\n        0x927C : \"MakerNote\",               // Any desired information written by the manufacturer\n        0x9286 : \"UserComment\",             // Comments by user\n\n        // related file\n        0xA004 : \"RelatedSoundFile\",        // Name of related sound file\n\n        // date and time\n        0x9003 : \"DateTimeOriginal\",        // Date and time when the original image was generated\n        0x9004 : \"DateTimeDigitized\",       // Date and time when the image was stored digitally\n        0x9290 : \"SubsecTime\",              // Fractions of seconds for DateTime\n        0x9291 : \"SubsecTimeOriginal\",      // Fractions of seconds for DateTimeOriginal\n        0x9292 : \"SubsecTimeDigitized\",     // Fractions of seconds for DateTimeDigitized\n\n        // picture-taking conditions\n        0x829A : \"ExposureTime\",            // Exposure time (in seconds)\n        0x829D : \"FNumber\",                 // F number\n        0x8822 : \"ExposureProgram\",         // Exposure program\n        0x8824 : \"SpectralSensitivity\",     // Spectral sensitivity\n        0x8827 : \"ISOSpeedRatings\",         // ISO speed rating\n        0x8828 : \"OECF\",                    // Optoelectric conversion factor\n        0x9201 : \"ShutterSpeedValue\",       // Shutter speed\n        0x9202 : \"ApertureValue\",           // Lens aperture\n        0x9203 : \"BrightnessValue\",         // Value of brightness\n        0x9204 : \"ExposureBias\",            // Exposure bias\n        0x9205 : \"MaxApertureValue\",        // Smallest F number of lens\n        0x9206 : \"SubjectDistance\",         // Distance to subject in meters\n        0x9207 : \"MeteringMode\",            // Metering mode\n        0x9208 : \"LightSource\",             // Kind of light source\n        0x9209 : \"Flash\",                   // Flash status\n        0x9214 : \"SubjectArea\",             // Location and area of main subject\n        0x920A : \"FocalLength\",             // Focal length of the lens in mm\n        0xA20B : \"FlashEnergy\",             // Strobe energy in BCPS\n        0xA20C : \"SpatialFrequencyResponse\",    //\n        0xA20E : \"FocalPlaneXResolution\",   // Number of pixels in width direction per FocalPlaneResolutionUnit\n        0xA20F : \"FocalPlaneYResolution\",   // Number of pixels in height direction per FocalPlaneResolutionUnit\n        0xA210 : \"FocalPlaneResolutionUnit\",    // Unit for measuring FocalPlaneXResolution and FocalPlaneYResolution\n        0xA214 : \"SubjectLocation\",         // Location of subject in image\n        0xA215 : \"ExposureIndex\",           // Exposure index selected on camera\n        0xA217 : \"SensingMethod\",           // Image sensor type\n        0xA300 : \"FileSource\",              // Image source (3 == DSC)\n        0xA301 : \"SceneType\",               // Scene type (1 == directly photographed)\n        0xA302 : \"CFAPattern\",              // Color filter array geometric pattern\n        0xA401 : \"CustomRendered\",          // Special processing\n        0xA402 : \"ExposureMode\",            // Exposure mode\n        0xA403 : \"WhiteBalance\",            // 1 = auto white balance, 2 = manual\n        0xA404 : \"DigitalZoomRation\",       // Digital zoom ratio\n        0xA405 : \"FocalLengthIn35mmFilm\",   // Equivalent foacl length assuming 35mm film camera (in mm)\n        0xA406 : \"SceneCaptureType\",        // Type of scene\n        0xA407 : \"GainControl\",             // Degree of overall image gain adjustment\n        0xA408 : \"Contrast\",                // Direction of contrast processing applied by camera\n        0xA409 : \"Saturation\",              // Direction of saturation processing applied by camera\n        0xA40A : \"Sharpness\",               // Direction of sharpness processing applied by camera\n        0xA40B : \"DeviceSettingDescription\",    //\n        0xA40C : \"SubjectDistanceRange\",    // Distance to subject\n\n        // other tags\n        0xA005 : \"InteroperabilityIFDPointer\",\n        0xA420 : \"ImageUniqueID\"            // Identifier assigned uniquely to each image\n    };\n\n    var TiffTags = EXIF.TiffTags = {\n        0x0100 : \"ImageWidth\",\n        0x0101 : \"ImageHeight\",\n        0x8769 : \"ExifIFDPointer\",\n        0x8825 : \"GPSInfoIFDPointer\",\n        0xA005 : \"InteroperabilityIFDPointer\",\n        0x0102 : \"BitsPerSample\",\n        0x0103 : \"Compression\",\n        0x0106 : \"PhotometricInterpretation\",\n        0x0112 : \"Orientation\",\n        0x0115 : \"SamplesPerPixel\",\n        0x011C : \"PlanarConfiguration\",\n        0x0212 : \"YCbCrSubSampling\",\n        0x0213 : \"YCbCrPositioning\",\n        0x011A : \"XResolution\",\n        0x011B : \"YResolution\",\n        0x0128 : \"ResolutionUnit\",\n        0x0111 : \"StripOffsets\",\n        0x0116 : \"RowsPerStrip\",\n        0x0117 : \"StripByteCounts\",\n        0x0201 : \"JPEGInterchangeFormat\",\n        0x0202 : \"JPEGInterchangeFormatLength\",\n        0x012D : \"TransferFunction\",\n        0x013E : \"WhitePoint\",\n        0x013F : \"PrimaryChromaticities\",\n        0x0211 : \"YCbCrCoefficients\",\n        0x0214 : \"ReferenceBlackWhite\",\n        0x0132 : \"DateTime\",\n        0x010E : \"ImageDescription\",\n        0x010F : \"Make\",\n        0x0110 : \"Model\",\n        0x0131 : \"Software\",\n        0x013B : \"Artist\",\n        0x8298 : \"Copyright\"\n    };\n\n    var GPSTags = EXIF.GPSTags = {\n        0x0000 : \"GPSVersionID\",\n        0x0001 : \"GPSLatitudeRef\",\n        0x0002 : \"GPSLatitude\",\n        0x0003 : \"GPSLongitudeRef\",\n        0x0004 : \"GPSLongitude\",\n        0x0005 : \"GPSAltitudeRef\",\n        0x0006 : \"GPSAltitude\",\n        0x0007 : \"GPSTimeStamp\",\n        0x0008 : \"GPSSatellites\",\n        0x0009 : \"GPSStatus\",\n        0x000A : \"GPSMeasureMode\",\n        0x000B : \"GPSDOP\",\n        0x000C : \"GPSSpeedRef\",\n        0x000D : \"GPSSpeed\",\n        0x000E : \"GPSTrackRef\",\n        0x000F : \"GPSTrack\",\n        0x0010 : \"GPSImgDirectionRef\",\n        0x0011 : \"GPSImgDirection\",\n        0x0012 : \"GPSMapDatum\",\n        0x0013 : \"GPSDestLatitudeRef\",\n        0x0014 : \"GPSDestLatitude\",\n        0x0015 : \"GPSDestLongitudeRef\",\n        0x0016 : \"GPSDestLongitude\",\n        0x0017 : \"GPSDestBearingRef\",\n        0x0018 : \"GPSDestBearing\",\n        0x0019 : \"GPSDestDistanceRef\",\n        0x001A : \"GPSDestDistance\",\n        0x001B : \"GPSProcessingMethod\",\n        0x001C : \"GPSAreaInformation\",\n        0x001D : \"GPSDateStamp\",\n        0x001E : \"GPSDifferential\"\n    };\n\n     // EXIF 2.3 Spec\n    var IFD1Tags = EXIF.IFD1Tags = {\n        0x0100: \"ImageWidth\",\n        0x0101: \"ImageHeight\",\n        0x0102: \"BitsPerSample\",\n        0x0103: \"Compression\",\n        0x0106: \"PhotometricInterpretation\",\n        0x0111: \"StripOffsets\",\n        0x0112: \"Orientation\",\n        0x0115: \"SamplesPerPixel\",\n        0x0116: \"RowsPerStrip\",\n        0x0117: \"StripByteCounts\",\n        0x011A: \"XResolution\",\n        0x011B: \"YResolution\",\n        0x011C: \"PlanarConfiguration\",\n        0x0128: \"ResolutionUnit\",\n        0x0201: \"JpegIFOffset\",    // When image format is JPEG, this value show offset to JPEG data stored.(aka \"ThumbnailOffset\" or \"JPEGInterchangeFormat\")\n        0x0202: \"JpegIFByteCount\", // When image format is JPEG, this value shows data size of JPEG image (aka \"ThumbnailLength\" or \"JPEGInterchangeFormatLength\")\n        0x0211: \"YCbCrCoefficients\",\n        0x0212: \"YCbCrSubSampling\",\n        0x0213: \"YCbCrPositioning\",\n        0x0214: \"ReferenceBlackWhite\"\n    };\n\n    var StringValues = EXIF.StringValues = {\n        ExposureProgram : {\n            0 : \"Not defined\",\n            1 : \"Manual\",\n            2 : \"Normal program\",\n            3 : \"Aperture priority\",\n            4 : \"Shutter priority\",\n            5 : \"Creative program\",\n            6 : \"Action program\",\n            7 : \"Portrait mode\",\n            8 : \"Landscape mode\"\n        },\n        MeteringMode : {\n            0 : \"Unknown\",\n            1 : \"Average\",\n            2 : \"CenterWeightedAverage\",\n            3 : \"Spot\",\n            4 : \"MultiSpot\",\n            5 : \"Pattern\",\n            6 : \"Partial\",\n            255 : \"Other\"\n        },\n        LightSource : {\n            0 : \"Unknown\",\n            1 : \"Daylight\",\n            2 : \"Fluorescent\",\n            3 : \"Tungsten (incandescent light)\",\n            4 : \"Flash\",\n            9 : \"Fine weather\",\n            10 : \"Cloudy weather\",\n            11 : \"Shade\",\n            12 : \"Daylight fluorescent (D 5700 - 7100K)\",\n            13 : \"Day white fluorescent (N 4600 - 5400K)\",\n            14 : \"Cool white fluorescent (W 3900 - 4500K)\",\n            15 : \"White fluorescent (WW 3200 - 3700K)\",\n            17 : \"Standard light A\",\n            18 : \"Standard light B\",\n            19 : \"Standard light C\",\n            20 : \"D55\",\n            21 : \"D65\",\n            22 : \"D75\",\n            23 : \"D50\",\n            24 : \"ISO studio tungsten\",\n            255 : \"Other\"\n        },\n        Flash : {\n            0x0000 : \"Flash did not fire\",\n            0x0001 : \"Flash fired\",\n            0x0005 : \"Strobe return light not detected\",\n            0x0007 : \"Strobe return light detected\",\n            0x0009 : \"Flash fired, compulsory flash mode\",\n            0x000D : \"Flash fired, compulsory flash mode, return light not detected\",\n            0x000F : \"Flash fired, compulsory flash mode, return light detected\",\n            0x0010 : \"Flash did not fire, compulsory flash mode\",\n            0x0018 : \"Flash did not fire, auto mode\",\n            0x0019 : \"Flash fired, auto mode\",\n            0x001D : \"Flash fired, auto mode, return light not detected\",\n            0x001F : \"Flash fired, auto mode, return light detected\",\n            0x0020 : \"No flash function\",\n            0x0041 : \"Flash fired, red-eye reduction mode\",\n            0x0045 : \"Flash fired, red-eye reduction mode, return light not detected\",\n            0x0047 : \"Flash fired, red-eye reduction mode, return light detected\",\n            0x0049 : \"Flash fired, compulsory flash mode, red-eye reduction mode\",\n            0x004D : \"Flash fired, compulsory flash mode, red-eye reduction mode, return light not detected\",\n            0x004F : \"Flash fired, compulsory flash mode, red-eye reduction mode, return light detected\",\n            0x0059 : \"Flash fired, auto mode, red-eye reduction mode\",\n            0x005D : \"Flash fired, auto mode, return light not detected, red-eye reduction mode\",\n            0x005F : \"Flash fired, auto mode, return light detected, red-eye reduction mode\"\n        },\n        SensingMethod : {\n            1 : \"Not defined\",\n            2 : \"One-chip color area sensor\",\n            3 : \"Two-chip color area sensor\",\n            4 : \"Three-chip color area sensor\",\n            5 : \"Color sequential area sensor\",\n            7 : \"Trilinear sensor\",\n            8 : \"Color sequential linear sensor\"\n        },\n        SceneCaptureType : {\n            0 : \"Standard\",\n            1 : \"Landscape\",\n            2 : \"Portrait\",\n            3 : \"Night scene\"\n        },\n        SceneType : {\n            1 : \"Directly photographed\"\n        },\n        CustomRendered : {\n            0 : \"Normal process\",\n            1 : \"Custom process\"\n        },\n        WhiteBalance : {\n            0 : \"Auto white balance\",\n            1 : \"Manual white balance\"\n        },\n        GainControl : {\n            0 : \"None\",\n            1 : \"Low gain up\",\n            2 : \"High gain up\",\n            3 : \"Low gain down\",\n            4 : \"High gain down\"\n        },\n        Contrast : {\n            0 : \"Normal\",\n            1 : \"Soft\",\n            2 : \"Hard\"\n        },\n        Saturation : {\n            0 : \"Normal\",\n            1 : \"Low saturation\",\n            2 : \"High saturation\"\n        },\n        Sharpness : {\n            0 : \"Normal\",\n            1 : \"Soft\",\n            2 : \"Hard\"\n        },\n        SubjectDistanceRange : {\n            0 : \"Unknown\",\n            1 : \"Macro\",\n            2 : \"Close view\",\n            3 : \"Distant view\"\n        },\n        FileSource : {\n            3 : \"DSC\"\n        },\n\n        Components : {\n            0 : \"\",\n            1 : \"Y\",\n            2 : \"Cb\",\n            3 : \"Cr\",\n            4 : \"R\",\n            5 : \"G\",\n            6 : \"B\"\n        }\n    };\n\n    function addEvent(element, event, handler) {\n        if (element.addEventListener) {\n            element.addEventListener(event, handler, false);\n        } else if (element.attachEvent) {\n            element.attachEvent(\"on\" + event, handler);\n        }\n    }\n\n    function imageHasData(img) {\n        return !!(img.exifdata);\n    }\n\n\n    function base64ToArrayBuffer(base64, contentType) {\n        contentType = contentType || base64.match(/^data\\:([^\\;]+)\\;base64,/mi)[1] || ''; // e.g. 'data:image/jpeg;base64,...' => 'image/jpeg'\n        base64 = base64.replace(/^data\\:([^\\;]+)\\;base64,/gmi, '');\n        var binary = atob(base64);\n        var len = binary.length;\n        var buffer = new ArrayBuffer(len);\n        var view = new Uint8Array(buffer);\n        for (var i = 0; i < len; i++) {\n            view[i] = binary.charCodeAt(i);\n        }\n        return buffer;\n    }\n\n    function objectURLToBlob(url, callback) {\n        var http = new XMLHttpRequest();\n        http.open(\"GET\", url, true);\n        http.responseType = \"blob\";\n        http.onload = function(e) {\n            if (this.status == 200 || this.status === 0) {\n                callback(this.response);\n            }\n        };\n        http.send();\n    }\n\n    function getImageData(img, callback) {\n        function handleBinaryFile(binFile) {\n            var data = findEXIFinJPEG(binFile);\n            img.exifdata = data || {};\n            var iptcdata = findIPTCinJPEG(binFile);\n            img.iptcdata = iptcdata || {};\n            if (EXIF.isXmpEnabled) {\n               var xmpdata= findXMPinJPEG(binFile);\n               img.xmpdata = xmpdata || {};               \n            }\n            if (callback) {\n                callback.call(img);\n            }\n        }\n\n        if (img.src) {\n            if (/^data\\:/i.test(img.src)) { // Data URI\n                var arrayBuffer = base64ToArrayBuffer(img.src);\n                handleBinaryFile(arrayBuffer);\n\n            } else if (/^blob\\:/i.test(img.src)) { // Object URL\n                var fileReader = new FileReader();\n                fileReader.onload = function(e) {\n                    handleBinaryFile(e.target.result);\n                };\n                objectURLToBlob(img.src, function (blob) {\n                    fileReader.readAsArrayBuffer(blob);\n                });\n            } else {\n                var http = new XMLHttpRequest();\n                http.onload = function() {\n                    if (this.status == 200 || this.status === 0) {\n                        handleBinaryFile(http.response);\n                    } else {\n                        throw \"Could not load image\";\n                    }\n                    http = null;\n                };\n                http.open(\"GET\", img.src, true);\n                http.responseType = \"arraybuffer\";\n                http.send(null);\n            }\n        } else if (self.FileReader && (img instanceof self.Blob || img instanceof self.File)) {\n            var fileReader = new FileReader();\n            fileReader.onload = function(e) {\n                if (debug) console.log(\"Got file of length \" + e.target.result.byteLength);\n                handleBinaryFile(e.target.result);\n            };\n\n            fileReader.readAsArrayBuffer(img);\n        }\n    }\n\n    function findEXIFinJPEG(file) {\n        var dataView = new DataView(file);\n\n        if (debug) console.log(\"Got file of length \" + file.byteLength);\n        if ((dataView.getUint8(0) != 0xFF) || (dataView.getUint8(1) != 0xD8)) {\n            if (debug) console.log(\"Not a valid JPEG\");\n            return false; // not a valid jpeg\n        }\n\n        var offset = 2,\n            length = file.byteLength,\n            marker;\n\n        while (offset < length) {\n            if (dataView.getUint8(offset) != 0xFF) {\n                if (debug) console.log(\"Not a valid marker at offset \" + offset + \", found: \" + dataView.getUint8(offset));\n                return false; // not a valid marker, something is wrong\n            }\n\n            marker = dataView.getUint8(offset + 1);\n            if (debug) console.log(marker);\n\n            // we could implement handling for other markers here,\n            // but we're only looking for 0xFFE1 for EXIF data\n\n            if (marker == 225) {\n                if (debug) console.log(\"Found 0xFFE1 marker\");\n\n                return readEXIFData(dataView, offset + 4, dataView.getUint16(offset + 2) - 2);\n\n                // offset += 2 + file.getShortAt(offset+2, true);\n\n            } else {\n                offset += 2 + dataView.getUint16(offset+2);\n            }\n\n        }\n\n    }\n\n    function findIPTCinJPEG(file) {\n        var dataView = new DataView(file);\n\n        if (debug) console.log(\"Got file of length \" + file.byteLength);\n        if ((dataView.getUint8(0) != 0xFF) || (dataView.getUint8(1) != 0xD8)) {\n            if (debug) console.log(\"Not a valid JPEG\");\n            return false; // not a valid jpeg\n        }\n\n        var offset = 2,\n            length = file.byteLength;\n\n\n        var isFieldSegmentStart = function(dataView, offset){\n            return (\n                dataView.getUint8(offset) === 0x38 &&\n                dataView.getUint8(offset+1) === 0x42 &&\n                dataView.getUint8(offset+2) === 0x49 &&\n                dataView.getUint8(offset+3) === 0x4D &&\n                dataView.getUint8(offset+4) === 0x04 &&\n                dataView.getUint8(offset+5) === 0x04\n            );\n        };\n\n        while (offset < length) {\n\n            if ( isFieldSegmentStart(dataView, offset )){\n\n                // Get the length of the name header (which is padded to an even number of bytes)\n                var nameHeaderLength = dataView.getUint8(offset+7);\n                if(nameHeaderLength % 2 !== 0) nameHeaderLength += 1;\n                // Check for pre photoshop 6 format\n                if(nameHeaderLength === 0) {\n                    // Always 4\n                    nameHeaderLength = 4;\n                }\n\n                var startOffset = offset + 8 + nameHeaderLength;\n                var sectionLength = dataView.getUint16(offset + 6 + nameHeaderLength);\n\n                return readIPTCData(file, startOffset, sectionLength);\n\n                break;\n\n            }\n\n\n            // Not the marker, continue searching\n            offset++;\n\n        }\n\n    }\n    var IptcFieldMap = {\n        0x78 : 'caption',\n        0x6E : 'credit',\n        0x19 : 'keywords',\n        0x37 : 'dateCreated',\n        0x50 : 'byline',\n        0x55 : 'bylineTitle',\n        0x7A : 'captionWriter',\n        0x69 : 'headline',\n        0x74 : 'copyright',\n        0x0F : 'category'\n    };\n    function readIPTCData(file, startOffset, sectionLength){\n        var dataView = new DataView(file);\n        var data = {};\n        var fieldValue, fieldName, dataSize, segmentType, segmentSize;\n        var segmentStartPos = startOffset;\n        while(segmentStartPos < startOffset+sectionLength) {\n            if(dataView.getUint8(segmentStartPos) === 0x1C && dataView.getUint8(segmentStartPos+1) === 0x02){\n                segmentType = dataView.getUint8(segmentStartPos+2);\n                if(segmentType in IptcFieldMap) {\n                    dataSize = dataView.getInt16(segmentStartPos+3);\n                    segmentSize = dataSize + 5;\n                    fieldName = IptcFieldMap[segmentType];\n                    fieldValue = getStringFromDB(dataView, segmentStartPos+5, dataSize);\n                    // Check if we already stored a value with this name\n                    if(data.hasOwnProperty(fieldName)) {\n                        // Value already stored with this name, create multivalue field\n                        if(data[fieldName] instanceof Array) {\n                            data[fieldName].push(fieldValue);\n                        }\n                        else {\n                            data[fieldName] = [data[fieldName], fieldValue];\n                        }\n                    }\n                    else {\n                        data[fieldName] = fieldValue;\n                    }\n                }\n\n            }\n            segmentStartPos++;\n        }\n        return data;\n    }\n\n\n\n    function readTags(file, tiffStart, dirStart, strings, bigEnd) {\n        var entries = file.getUint16(dirStart, !bigEnd),\n            tags = {},\n            entryOffset, tag,\n            i;\n\n        for (i=0;i<entries;i++) {\n            entryOffset = dirStart + i*12 + 2;\n            tag = strings[file.getUint16(entryOffset, !bigEnd)];\n            if (!tag && debug) console.log(\"Unknown tag: \" + file.getUint16(entryOffset, !bigEnd));\n            tags[tag] = readTagValue(file, entryOffset, tiffStart, dirStart, bigEnd);\n        }\n        return tags;\n    }\n\n\n    function readTagValue(file, entryOffset, tiffStart, dirStart, bigEnd) {\n        var type = file.getUint16(entryOffset+2, !bigEnd),\n            numValues = file.getUint32(entryOffset+4, !bigEnd),\n            valueOffset = file.getUint32(entryOffset+8, !bigEnd) + tiffStart,\n            offset,\n            vals, val, n,\n            numerator, denominator;\n\n        switch (type) {\n            case 1: // byte, 8-bit unsigned int\n            case 7: // undefined, 8-bit byte, value depending on field\n                if (numValues == 1) {\n                    return file.getUint8(entryOffset + 8, !bigEnd);\n                } else {\n                    offset = numValues > 4 ? valueOffset : (entryOffset + 8);\n                    vals = [];\n                    for (n=0;n<numValues;n++) {\n                        vals[n] = file.getUint8(offset + n);\n                    }\n                    return vals;\n                }\n\n            case 2: // ascii, 8-bit byte\n                offset = numValues > 4 ? valueOffset : (entryOffset + 8);\n                return getStringFromDB(file, offset, numValues-1);\n\n            case 3: // short, 16 bit int\n                if (numValues == 1) {\n                    return file.getUint16(entryOffset + 8, !bigEnd);\n                } else {\n                    offset = numValues > 2 ? valueOffset : (entryOffset + 8);\n                    vals = [];\n                    for (n=0;n<numValues;n++) {\n                        vals[n] = file.getUint16(offset + 2*n, !bigEnd);\n                    }\n                    return vals;\n                }\n\n            case 4: // long, 32 bit int\n                if (numValues == 1) {\n                    return file.getUint32(entryOffset + 8, !bigEnd);\n                } else {\n                    vals = [];\n                    for (n=0;n<numValues;n++) {\n                        vals[n] = file.getUint32(valueOffset + 4*n, !bigEnd);\n                    }\n                    return vals;\n                }\n\n            case 5:    // rational = two long values, first is numerator, second is denominator\n                if (numValues == 1) {\n                    numerator = file.getUint32(valueOffset, !bigEnd);\n                    denominator = file.getUint32(valueOffset+4, !bigEnd);\n                    val = new Number(numerator / denominator);\n                    val.numerator = numerator;\n                    val.denominator = denominator;\n                    return val;\n                } else {\n                    vals = [];\n                    for (n=0;n<numValues;n++) {\n                        numerator = file.getUint32(valueOffset + 8*n, !bigEnd);\n                        denominator = file.getUint32(valueOffset+4 + 8*n, !bigEnd);\n                        vals[n] = new Number(numerator / denominator);\n                        vals[n].numerator = numerator;\n                        vals[n].denominator = denominator;\n                    }\n                    return vals;\n                }\n\n            case 9: // slong, 32 bit signed int\n                if (numValues == 1) {\n                    return file.getInt32(entryOffset + 8, !bigEnd);\n                } else {\n                    vals = [];\n                    for (n=0;n<numValues;n++) {\n                        vals[n] = file.getInt32(valueOffset + 4*n, !bigEnd);\n                    }\n                    return vals;\n                }\n\n            case 10: // signed rational, two slongs, first is numerator, second is denominator\n                if (numValues == 1) {\n                    return file.getInt32(valueOffset, !bigEnd) / file.getInt32(valueOffset+4, !bigEnd);\n                } else {\n                    vals = [];\n                    for (n=0;n<numValues;n++) {\n                        vals[n] = file.getInt32(valueOffset + 8*n, !bigEnd) / file.getInt32(valueOffset+4 + 8*n, !bigEnd);\n                    }\n                    return vals;\n                }\n        }\n    }\n\n    /**\n    * Given an IFD (Image File Directory) start offset\n    * returns an offset to next IFD or 0 if it's the last IFD.\n    */\n    function getNextIFDOffset(dataView, dirStart, bigEnd){\n        //the first 2bytes means the number of directory entries contains in this IFD\n        var entries = dataView.getUint16(dirStart, !bigEnd);\n\n        // After last directory entry, there is a 4bytes of data,\n        // it means an offset to next IFD.\n        // If its value is '0x00000000', it means this is the last IFD and there is no linked IFD.\n\n        return dataView.getUint32(dirStart + 2 + entries * 12, !bigEnd); // each entry is 12 bytes long\n    }\n\n    function readThumbnailImage(dataView, tiffStart, firstIFDOffset, bigEnd){\n        // get the IFD1 offset\n        var IFD1OffsetPointer = getNextIFDOffset(dataView, tiffStart+firstIFDOffset, bigEnd);\n\n        if (!IFD1OffsetPointer) {\n            // console.log('******** IFD1Offset is empty, image thumb not found ********');\n            return {};\n        }\n        else if (IFD1OffsetPointer > dataView.byteLength) { // this should not happen\n            // console.log('******** IFD1Offset is outside the bounds of the DataView ********');\n            return {};\n        }\n        // console.log('*******  thumbnail IFD offset (IFD1) is: %s', IFD1OffsetPointer);\n\n        var thumbTags = readTags(dataView, tiffStart, tiffStart + IFD1OffsetPointer, IFD1Tags, bigEnd)\n\n        // EXIF 2.3 specification for JPEG format thumbnail\n\n        // If the value of Compression(0x0103) Tag in IFD1 is '6', thumbnail image format is JPEG.\n        // Most of Exif image uses JPEG format for thumbnail. In that case, you can get offset of thumbnail\n        // by JpegIFOffset(0x0201) Tag in IFD1, size of thumbnail by JpegIFByteCount(0x0202) Tag.\n        // Data format is ordinary JPEG format, starts from 0xFFD8 and ends by 0xFFD9. It seems that\n        // JPEG format and 160x120pixels of size are recommended thumbnail format for Exif2.1 or later.\n\n        if (thumbTags['Compression']) {\n            // console.log('Thumbnail image found!');\n\n            switch (thumbTags['Compression']) {\n                case 6:\n                    // console.log('Thumbnail image format is JPEG');\n                    if (thumbTags.JpegIFOffset && thumbTags.JpegIFByteCount) {\n                    // extract the thumbnail\n                        var tOffset = tiffStart + thumbTags.JpegIFOffset;\n                        var tLength = thumbTags.JpegIFByteCount;\n                        thumbTags['blob'] = new Blob([new Uint8Array(dataView.buffer, tOffset, tLength)], {\n                            type: 'image/jpeg'\n                        });\n                    }\n                break;\n\n            case 1:\n                console.log(\"Thumbnail image format is TIFF, which is not implemented.\");\n                break;\n            default:\n                console.log(\"Unknown thumbnail image format '%s'\", thumbTags['Compression']);\n            }\n        }\n        else if (thumbTags['PhotometricInterpretation'] == 2) {\n            console.log(\"Thumbnail image format is RGB, which is not implemented.\");\n        }\n        return thumbTags;\n    }\n\n    function getStringFromDB(buffer, start, length) {\n        var outstr = \"\";\n        for (n = start; n < start+length; n++) {\n            outstr += String.fromCharCode(buffer.getUint8(n));\n        }\n        return outstr;\n    }\n\n    function readEXIFData(file, start) {\n        if (getStringFromDB(file, start, 4) != \"Exif\") {\n            if (debug) console.log(\"Not valid EXIF data! \" + getStringFromDB(file, start, 4));\n            return false;\n        }\n\n        var bigEnd,\n            tags, tag,\n            exifData, gpsData,\n            tiffOffset = start + 6;\n\n        // test for TIFF validity and endianness\n        if (file.getUint16(tiffOffset) == 0x4949) {\n            bigEnd = false;\n        } else if (file.getUint16(tiffOffset) == 0x4D4D) {\n            bigEnd = true;\n        } else {\n            if (debug) console.log(\"Not valid TIFF data! (no 0x4949 or 0x4D4D)\");\n            return false;\n        }\n\n        if (file.getUint16(tiffOffset+2, !bigEnd) != 0x002A) {\n            if (debug) console.log(\"Not valid TIFF data! (no 0x002A)\");\n            return false;\n        }\n\n        var firstIFDOffset = file.getUint32(tiffOffset+4, !bigEnd);\n\n        if (firstIFDOffset < 0x00000008) {\n            if (debug) console.log(\"Not valid TIFF data! (First offset less than 8)\", file.getUint32(tiffOffset+4, !bigEnd));\n            return false;\n        }\n\n        tags = readTags(file, tiffOffset, tiffOffset + firstIFDOffset, TiffTags, bigEnd);\n\n        if (tags.ExifIFDPointer) {\n            exifData = readTags(file, tiffOffset, tiffOffset + tags.ExifIFDPointer, ExifTags, bigEnd);\n            for (tag in exifData) {\n                switch (tag) {\n                    case \"LightSource\" :\n                    case \"Flash\" :\n                    case \"MeteringMode\" :\n                    case \"ExposureProgram\" :\n                    case \"SensingMethod\" :\n                    case \"SceneCaptureType\" :\n                    case \"SceneType\" :\n                    case \"CustomRendered\" :\n                    case \"WhiteBalance\" :\n                    case \"GainControl\" :\n                    case \"Contrast\" :\n                    case \"Saturation\" :\n                    case \"Sharpness\" :\n                    case \"SubjectDistanceRange\" :\n                    case \"FileSource\" :\n                        exifData[tag] = StringValues[tag][exifData[tag]];\n                        break;\n\n                    case \"ExifVersion\" :\n                    case \"FlashpixVersion\" :\n                        exifData[tag] = String.fromCharCode(exifData[tag][0], exifData[tag][1], exifData[tag][2], exifData[tag][3]);\n                        break;\n\n                    case \"ComponentsConfiguration\" :\n                        exifData[tag] =\n                            StringValues.Components[exifData[tag][0]] +\n                            StringValues.Components[exifData[tag][1]] +\n                            StringValues.Components[exifData[tag][2]] +\n                            StringValues.Components[exifData[tag][3]];\n                        break;\n                }\n                tags[tag] = exifData[tag];\n            }\n        }\n\n        if (tags.GPSInfoIFDPointer) {\n            gpsData = readTags(file, tiffOffset, tiffOffset + tags.GPSInfoIFDPointer, GPSTags, bigEnd);\n            for (tag in gpsData) {\n                switch (tag) {\n                    case \"GPSVersionID\" :\n                        gpsData[tag] = gpsData[tag][0] +\n                            \".\" + gpsData[tag][1] +\n                            \".\" + gpsData[tag][2] +\n                            \".\" + gpsData[tag][3];\n                        break;\n                }\n                tags[tag] = gpsData[tag];\n            }\n        }\n\n        // extract thumbnail\n        tags['thumbnail'] = readThumbnailImage(file, tiffOffset, firstIFDOffset, bigEnd);\n\n        return tags;\n    }\n\n   function findXMPinJPEG(file) {\n\n        if (!('DOMParser' in self)) {\n            // console.warn('XML parsing not supported without DOMParser');\n            return;\n        }\n        var dataView = new DataView(file);\n\n        if (debug) console.log(\"Got file of length \" + file.byteLength);\n        if ((dataView.getUint8(0) != 0xFF) || (dataView.getUint8(1) != 0xD8)) {\n           if (debug) console.log(\"Not a valid JPEG\");\n           return false; // not a valid jpeg\n        }\n\n        var offset = 2,\n            length = file.byteLength,\n            dom = new DOMParser();\n\n        while (offset < (length-4)) {\n            if (getStringFromDB(dataView, offset, 4) == \"http\") {\n                var startOffset = offset - 1;\n                var sectionLength = dataView.getUint16(offset - 2) - 1;\n                var xmpString = getStringFromDB(dataView, startOffset, sectionLength)\n                var xmpEndIndex = xmpString.indexOf('xmpmeta>') + 8;\n                xmpString = xmpString.substring( xmpString.indexOf( '<x:xmpmeta' ), xmpEndIndex );\n\n                var indexOfXmp = xmpString.indexOf('x:xmpmeta') + 10\n                //Many custom written programs embed xmp/xml without any namespace. Following are some of them.\n                //Without these namespaces, XML is thought to be invalid by parsers\n                xmpString = xmpString.slice(0, indexOfXmp)\n                            + 'xmlns:Iptc4xmpCore=\"http://iptc.org/std/Iptc4xmpCore/1.0/xmlns/\" '\n                            + 'xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" '\n                            + 'xmlns:tiff=\"http://ns.adobe.com/tiff/1.0/\" '\n                            + 'xmlns:plus=\"http://schemas.android.com/apk/lib/com.google.android.gms.plus\" '\n                            + 'xmlns:ext=\"http://www.gettyimages.com/xsltExtension/1.0\" '\n                            + 'xmlns:exif=\"http://ns.adobe.com/exif/1.0/\" '\n                            + 'xmlns:stEvt=\"http://ns.adobe.com/xap/1.0/sType/ResourceEvent#\" '\n                            + 'xmlns:stRef=\"http://ns.adobe.com/xap/1.0/sType/ResourceRef#\" '\n                            + 'xmlns:crs=\"http://ns.adobe.com/camera-raw-settings/1.0/\" '\n                            + 'xmlns:xapGImg=\"http://ns.adobe.com/xap/1.0/g/img/\" '\n                            + 'xmlns:Iptc4xmpExt=\"http://iptc.org/std/Iptc4xmpExt/2008-02-29/\" '\n                            + xmpString.slice(indexOfXmp)\n\n                var domDocument = dom.parseFromString( xmpString, 'text/xml' );\n                return xml2Object(domDocument);\n            } else{\n             offset++;\n            }\n        }\n    }\n\n    function xml2json(xml) {\n        var json = {};\n      \n        if (xml.nodeType == 1) { // element node\n          if (xml.attributes.length > 0) {\n            json['@attributes'] = {};\n            for (var j = 0; j < xml.attributes.length; j++) {\n              var attribute = xml.attributes.item(j);\n              json['@attributes'][attribute.nodeName] = attribute.nodeValue;\n            }\n          }\n        } else if (xml.nodeType == 3) { // text node\n          return xml.nodeValue;\n        }\n      \n        // deal with children\n        if (xml.hasChildNodes()) {\n          for(var i = 0; i < xml.childNodes.length; i++) {\n            var child = xml.childNodes.item(i);\n            var nodeName = child.nodeName;\n            if (json[nodeName] == null) {\n              json[nodeName] = xml2json(child);\n            } else {\n              if (json[nodeName].push == null) {\n                var old = json[nodeName];\n                json[nodeName] = [];\n                json[nodeName].push(old);\n              }\n              json[nodeName].push(xml2json(child));\n            }\n          }\n        }\n        \n        return json;\n    }\n\n    function xml2Object(xml) {\n        try {\n            var obj = {};\n            if (xml.children.length > 0) {\n              for (var i = 0; i < xml.children.length; i++) {\n                var item = xml.children.item(i);\n                var attributes = item.attributes;\n                for(var idx in attributes) {\n                    var itemAtt = attributes[idx];\n                    var dataKey = itemAtt.nodeName;\n                    var dataValue = itemAtt.nodeValue;\n\n                    if(dataKey !== undefined) {\n                        obj[dataKey] = dataValue;\n                    }\n                }\n                var nodeName = item.nodeName;\n\n                if (typeof (obj[nodeName]) == \"undefined\") {\n                  obj[nodeName] = xml2json(item);\n                } else {\n                  if (typeof (obj[nodeName].push) == \"undefined\") {\n                    var old = obj[nodeName];\n\n                    obj[nodeName] = [];\n                    obj[nodeName].push(old);\n                  }\n                  obj[nodeName].push(xml2json(item));\n                }\n              }\n            } else {\n              obj = xml.textContent;\n            }\n            return obj;\n          } catch (e) {\n              console.log(e.message);\n          }\n    }\n\n    EXIF.enableXmp = function() {\n        EXIF.isXmpEnabled = true;\n    }\n\n    EXIF.disableXmp = function() {\n        EXIF.isXmpEnabled = false;\n    }\n\n    EXIF.getData = function(img, callback) {\n        if (((self.Image && img instanceof self.Image)\n            || (self.HTMLImageElement && img instanceof self.HTMLImageElement))\n            && !img.complete)\n            return false;\n\n        if (!imageHasData(img)) {\n            getImageData(img, callback);\n        } else {\n            if (callback) {\n                callback.call(img);\n            }\n        }\n        return true;\n    }\n\n    EXIF.getTag = function(img, tag) {\n        if (!imageHasData(img)) return;\n        return img.exifdata[tag];\n    }\n    \n    EXIF.getIptcTag = function(img, tag) {\n        if (!imageHasData(img)) return;\n        return img.iptcdata[tag];\n    }\n\n    EXIF.getAllTags = function(img) {\n        if (!imageHasData(img)) return {};\n        var a,\n            data = img.exifdata,\n            tags = {};\n        for (a in data) {\n            if (data.hasOwnProperty(a)) {\n                tags[a] = data[a];\n            }\n        }\n        return tags;\n    }\n    \n    EXIF.getAllIptcTags = function(img) {\n        if (!imageHasData(img)) return {};\n        var a,\n            data = img.iptcdata,\n            tags = {};\n        for (a in data) {\n            if (data.hasOwnProperty(a)) {\n                tags[a] = data[a];\n            }\n        }\n        return tags;\n    }\n\n    EXIF.pretty = function(img) {\n        if (!imageHasData(img)) return \"\";\n        var a,\n            data = img.exifdata,\n            strPretty = \"\";\n        for (a in data) {\n            if (data.hasOwnProperty(a)) {\n                if (typeof data[a] == \"object\") {\n                    if (data[a] instanceof Number) {\n                        strPretty += a + \" : \" + data[a] + \" [\" + data[a].numerator + \"/\" + data[a].denominator + \"]\\r\\n\";\n                    } else {\n                        strPretty += a + \" : [\" + data[a].length + \" values]\\r\\n\";\n                    }\n                } else {\n                    strPretty += a + \" : \" + data[a] + \"\\r\\n\";\n                }\n            }\n        }\n        return strPretty;\n    }\n\n    EXIF.readFromBinaryFile = function(file) {\n        return findEXIFinJPEG(file);\n    }\n\n    if (typeof define === 'function' && define.amd) {\n        define('exif-js', [], function() {\n            return EXIF;\n        });\n    }\n}.call(this));\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/exif-js/exif.js\n// module id = sbrb\n// module chunks = 13"],"sourceRoot":""}